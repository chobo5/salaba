<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salaba.dao.MemberDao">

  <resultMap id="MemberMap" type="Member">
    <id column="member_no" property="no"/>
    <result column="email" property="email"/>
    <result column="name" property="name"/>
    <result column="nickname" property="nickname"/>
    <result column="birthday" property="birthday"/>
    <result column="tel_no" property="telNo"/>
    <result column="nation_no" property="nationNo"/>
    <result column="address" property="address"/>
    <result column="sex" property="sex"/>
    <result column="photo" property="photo"/>
    <result column="my_theme_yn" property="myThemeYn"/>
    <result column="theme_no" property="themeNo"/>
    <result column="theme_name" property="themeName"/>

    <!-- grade 정보 가져오기 -->
<!--    <association property="grade" javaType="Grade">-->
<!--      <id column="grade_no" property="gradeNo"/>-->
<!--      <result column="grade_name" property="gradeName"/>-->
<!--    </association>-->
  </resultMap>

  <resultMap id="NationMap" type="Nation"><!--국가선택 준비-->
    <id column="nation_no" property="nationNo"/>
    <result column="nation_name" property="nationName"/>
  </resultMap>
  <resultMap id="AlarmMap" type="salaba.vo.Alarm">
    <id column="notify_no" property="notifyNo"/>
    <result column="member_no" property="memberNo"/>
    <result column="content" property="content"/>
    <result column="notify_date" property="notifyDate"/>
  </resultMap>

  <insert id="add" parameterType="Member"><!--회원가입>-->
    insert into member(
    name,
    nickname,
    birthday,
    email,
    password)
    values(
    #{name},
    #{nickname},
    STR_TO_DATE(#{birthday}, '%Y-%m-%d'), <!--생년월일 입력형식을 바꿔주는 sql문법-->
    #{email},
    sha2(#{password},256))
  </insert>

  <select id="selectMemberInfo" resultMap="MemberMap" parameterType="int"><!--내정보>-->
    select
    member_no,
    name,
    nickname,
    email,
    tel_no,
    birthday,
    nation_no,
    sex,
    address,
    photo
    from
    member
    where
    member_no=#{value}
  </select>

  <select id="getNation" resultMap="NationMap" ><!--국가선택>-->
    select
    nation_no,
    nation_name
    from nation
    order by nation_name
  </select>

  <update id="myinfoUpdate" parameterType="Member"><!--내정보 저장>-->
    update
    member
    set
    name=#{name},
    nickname=#{nickname},
    email=#{email},
    tel_no=#{telNo},
    birthday=#{birthday},
    sex=#{sex},
    address=#{address},
    photo=#{photo},
    nation_no=#{nationNo}
    where
    member_no=#{no}
  </update>

  <select id="checkNickname" resultMap="MemberMap" parameterType="String"><!--닉넴 중복체크>-->
    select
    nickname
    from
    member
    where
    nickname=#{value}
  </select>

  <update id="delete" parameterType="Member"><!--회원탈퇴>-->
    update
    member
    set
    state=#{state},
    exit_date=now()
    where
    member_no=#{no}
  </update>

  <select id="findByEmailAndPassword" resultMap="MemberMap"><!--로그인>-->
    select
      member_no,
      email,
      name,
      nickname,
      birthday,
      tel_no,
      nation_no,
      address,
      sex,
      photo,
      state
    from
    member
    where
    email= #{email}
    and password=sha2(#{password},256)
  </select>

  <select id="findEmail" resultMap="MemberMap"><!--이메일 찾기>-->
    select
    email,
    name
    from
    member
    where
    name= #{name}
    and birthday=#{birthday}
  </select>

  <select id="findPassword" resultMap="MemberMap"><!--비밀번호 찾기>-->
    select
    member_no
    from
    member
    where
    email= #{email}
    and name= #{name}
  </select>

  <update id="changePasswordSave" parameterType="Member"><!--비밀번호 변경>-->
    update
    member
    set
    password = sha2(#{password},256),
    state = case when state = '4' then '0' else state end
    where
    member_no=#{no}
  </update>

  <select id="myinfoCheckPassword" resultMap="MemberMap"><!--비밀번호 확인>-->
    select
      member_no
    from
    member
    where
    member_no=#{no}
    and password = sha2(#{password},256)
  </select>

  <insert id="insertPreference" parameterType="Member">
    insert into member_preference
    (member_no,theme_no)
    values(#{no},#{themeNo})
  </insert>

  <select id="findAllTheme" resultMap="MemberMap">
    select
    t.theme_no,
    t.theme_name,
    case when m.theme_no is null then 'N'
    else 'Y'
    end as my_theme_yn
    from
      theme t
      left outer join member_preference m on t.theme_no = m.theme_no and member_no = #{no}
  </select>

  <select id="findAllmyTheme" resultMap="MemberMap">
    select
      theme_no
    from
      member_preference
    where
      member_no = #{no}
  </select>

  <select id="getMemberPoint" resultType="String">
    select
      SUM(save_point)
    from
      point_history
    where
      member_no = #{no}
  </select>

  <select id="getGrade" resultMap="MemberMap">
    select
      m.member_no,
      m.grade_no,
      g.grade_name
    from
      member m
      inner join grade g on m.grade_no = g.grade_no
    where
      m.member_no= #{no}
  </select>

  <delete id="deletePreference" parameterType="Member">
    delete
    from
    member_preference
    where
    member_no = #{no}
  </delete>

  <select id="selectNotifyHistory" resultMap="AlarmMap">
    select
      notify_no,
      member_no,
      content,
      notify_date
    from
      notify_history
    where
      member_no = #{memberNo} and
      state = '0'
  </select>

  <insert id="addNotifyHistory" parameterType="salaba.vo.Alarm">
    insert into notify_history
      (member_no,content)
    values
      (#{memberNo},#{content})
  </insert>

  <update id="updateNotifyHistory">
    update
      notify_history
    set
      state = #{state}
    where
      notify_no = #{notifyNo}
  </update>
</mapper>